"use client";

import CommentItem from '@/components/CommentItem/CommentItem';
import "./CommentsList.scss";

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
 * @param {Array} comments - –º–∞—Å—Å–∏–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
 * @param {boolean} loading - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
 * @param {Object} user - –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} onCommentUpdated - callback –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 * @param {Function} onCommentDeleted - callback –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 */
const CommentsList = ({
    comments = [],
    loading = false,
    user = null,
    onCommentUpdated,
    onCommentDeleted
}) => {

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    if (loading) {
        return (
            <div className="comments-list">
                <div className="comments-list__loading">
                    <div className="comments-list__spinner"></div>
                    <p>Naƒç√≠tavam koment√°re...</p>
                </div>
            </div>
        );
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    if (!comments || comments.length === 0) {
        return (
            <div className="comments-list">
                <div className="comments-list__empty">
                    <p>üí¨ Zatiaƒæ ≈æiadne koment√°re</p>
                    <p className="comments-list__empty-subtitle">
                        Buƒète prv√Ω, kto prid√° koment√°r!
                    </p>
                </div>
            </div>
        );
    }

    return (
        <div className="comments-list">
            {comments.map((comment) => (
                <CommentItem
                    key={comment._id}
                    comment={comment}
                    user={user}
                    onCommentUpdated={onCommentUpdated}
                    onCommentDeleted={onCommentDeleted}
                />
            ))}
        </div>
    );
};

export default CommentsList;